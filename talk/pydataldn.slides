<div class="bg_grey">
    <h2 class="presenter-title">Rethinking Data Visualisation with
        <em style="color: #FDA703; font-style: normal; font-weight: bold;">&lt;PyScript&gt;</em></h2>
    <h3 class="presenter-title">Valerio Maggio</h3>
    <h4 class="presenter-title">University of Bristol; Anaconda, inc.</h4>
</div>

--- new ---

<div class="bg_green">
    <h2 class="presenter-title">Agenda</h2>
    <py-md>
        * What `[is|isNot]` PyScript
        * PyScript from a Data Science Perspective
        * Demo time
    </py-md>
</div>

--- new ---

<div class="single-title-meme bg_pink">
    <div class="centred">
        <py-md>
            > Please be advised that PyScript is very alpha and under heavy development.
            >
            > There are many known issues, from usability to loading times, and you should expect
            > things to change often.
            >
            > We encourage people to play and explore with PyScript,
            > but at this time we do not recommend using it for production.
        </py-md>
        <h1>Disclaimer</h1>
    </div>
</div>

--- new ---

<div class="single-title-meme bg_pink">
    <img src="https://c.tenor.com/bsjJw92LPHYAAAAC/tony-stark-screaming.gif" alt="screaming Tony Stark" />
    <h1>Be Ready</h1>
</div>

--- new ---

<div class="single-title-meme bg_purple">
    <img src="https://media.makeameme.org/created/work-in-progress-qzqa00.jpg" alt="WIP" />
    <h1>Under Development</h1>
</div>

--- new ---

<div class="single-title-meme bg_purple">
    <img src="https://images.cdn.circlesix.co/image/1/700/0/uploads/posts/2016/04/31bddd8961bbb98af97c166d8ad5e604.jpg" alt="WIP" />
    <h1 style="font-style: italic;">That's me while working on these slides</h1>
</div>

--- new ---

<div class="single-title bg_grey">
    <h1>What is <em style="color: #FDA703; font-style: normal; font-weight: bold;">&lt;PyScript&gt;</em></h1>
</div>

--- new ---

<div class="bg_grey">
    <style>
        .terminal {
            box-shadow: 1px 1px 40px rgb(0 0 0 / 30%);
            margin: 0 auto;
            max-width: 70%;
        }

        .window-buttons {
            background-color: #ff3b47;
            border-radius: 50%;
            border: 1px solid #c03d44;
            display: inline-block;
            height: 10px;
            left: -30rem;
            position: relative;
            top: 6px;
            width: 10px;
        }

        .minimize {
            background-color: #ffc100;
            border-color: #9d802c;
            /*left: 11px;*/
        }

        .zoom {
            background-color: #00d742;
            border-color: #049931;
            /*left: 16px;*/
        }

        .menu {
            background-color: #1D1E22;
            border-top-left-radius: 5px;
            border-top-right-radius: 5px;
            box-sizing: border-box;
            height: 25px;
            margin: 0 auto;
        }

        .screen {
            background-color: #1D1E22;
            border-bottom-left-radius: 5px;
            border-bottom-right-radius: 5px;
            box-sizing: border-box;
            margin: 0 auto;
            overflow: hidden;
            padding: 5rem 1rem;
        }

        .pre {
            -webkit-overflow-scrolling: touch;
            background: #2D2E35;
            border-radius: 10px;
            color: #fff;
            display: block;
            font-family: 'Hack Regular', monospace;
            font-size: .50rem;
            line-height: 1.5;
            max-width: 100%;
            min-width: 100px;
            overflow-x: scroll;
            padding: 0.5rem;
            white-space: nowrap;
        }

        #typewriter {
            animation: hide 6.5s 1s;
            font-family: 'Hack Regular', monospace;
            height: 0;
            line-height: 2.2;
            opacity: 0;
            position: relative;
            left: -34%;
        }

        /* #typewriter:after{
            content: "|";
            animation: blink 500ms linear infinite alternate;
        } */

        .terminal p {
            font-family: 'Hack Regular', monospace;
            font-size: 1.2em !important;
            /*left: 10%;*/
            overflow: hidden;
            position: relative;
            text-align: left;
            white-space: nowrap;
            width: 0;
        }

        .terminal span {
            color: #fff;
            font-weight: bold;
        }

        .line1 {
            animation: type .5s 8s steps(80, end) forwards;
            color: #9CD9F0;
            /* animation-direction: reverse; */
        }

        .cursor1 {
            animation: blink 1s 8s 2 forwards;
        }

        .line2 {
            animation: type .5s 10.25s steps(20, end) forwards;
            color: #888;
        }

        .cursor2 {
            animation: blink 1s 10.1s 2 forwards;
        }

        .line3 {
            animation: type .5s 12.2s steps(20, end) forwards;
            color: #FFAE57;
        }

        .cursor3 {
            animation: blink 1s 13s 2 forwards;
        }

        .line4 {
            animation: type .5s 14.85s steps(20, end) forwards;
            color: #9CD9F0;
        }

        .cursor4 {
            animation: blink 1s 15.5s 2 forwards;
        }

        .line5 {
            animation: type .5s 17.75s steps(20, end) forwards;
            color: #fff;
        }

        .cursor5 {
            animation: blink 1s 8.5s infinite;
        }

        /* ----------------------------------
         Animations
        -----------------------------------*/
        @keyframes blink {
            0% {
                opacity: 0;
            }

            40% {
                opacity: 0;
            }

            50% {
                opacity: 1;
            }

            90% {
                opacity: 1;
            }

            100% {
                opacity: 0;
            }
        }

        @keyframes hide {
            0% {
                /* display: none;
                height: auto; */
                opacity: 1;
            }
            50% {
                opacity: 1;
            }

            90% {
                opacity: 1;
            }

            100% {
                height: 0;
                opacity: 0;
            }
        }

        @keyframes type {
            to {
                width: 40rem;
            }
        }

        @keyframes slideIn {
            from {
                background-position: center 200%;
            }
            to {
                background-position: center bottom;
            }
        }


    </style>
    <h1 style="color: #FDA703; font-style: normal; font-weight: bold;">&lt;PyScript&gt;</h1>
    <!-- begin terminal window -->
    <div class="terminal">
        <div class="menu">
            <div class="window-buttons close"></div>
            <div class="window-buttons minimize"></div>
            <div class="window-buttons zoom"></div>
        </div>
        <div class="screen">
            <div class="code">

                            <pre id="typewriter">                            Wouldn't it be cool...
                            to run Python...
                            in your browser?
                           </pre>

                <p class="line1">&lt;html&gt;<span class="cursor1">|</span></p>
                <p class="line2">&nbsp;&nbsp;&nbsp;&nbsp;...<span class="cursor2">|</span></p>
                <p class="line3">&nbsp;&nbsp;&nbsp;&nbsp;&lt;py-script&gt;<span style="color: #aaa;"> <span
                        style="color:#FFD580;">print</span>(<span style="color:#BAE67E;">'Now you can!'</span>) </span>&lt;/py-script&gt;<span
                        class="cursor3">|</span></p>
                <p class="line4">&lt;/html&gt;<span class="cursor4">|</span></p>

                <p class="line5"><span class="cursor5">|</span></p>

            </div>
        </div>
    </div>
    <!-- end terminal window -->
    <script>
        // Typing animation
        function setupTypewriter(t) {
            var HTML = t.innerHTML;

            t.innerHTML = '';

            var cursorPosition = 0,
                tag = '',
                writingTag = false,
                tagOpen = false,
                typeSpeed = 100,
                tempTypeSpeed = 0;

            var type = function() {

                if (writingTag === true) {
                    tag += HTML[cursorPosition];
                }

                if (HTML[cursorPosition] === '<') {
                    tempTypeSpeed = 0;
                    if (tagOpen) {
                        tagOpen = false;
                        writingTag = true;
                    } else {
                        tag = '';
                        tagOpen = true;
                        writingTag = true;
                        tag += HTML[cursorPosition];
                    }
                }
                if (!writingTag && tagOpen) {
                    tag.innerHTML += HTML[cursorPosition];
                }
                if (!writingTag && !tagOpen) {
                    if (HTML[cursorPosition] === ' ') {
                        tempTypeSpeed = 0;
                    }
                    else {
                        tempTypeSpeed = (Math.random() * typeSpeed) + 50;
                    }
                    t.innerHTML += HTML[cursorPosition];
                }
                if (writingTag === true && HTML[cursorPosition] === '>') {
                    tempTypeSpeed = (Math.random() * typeSpeed) + 50;
                    writingTag = false;
                    if (tagOpen) {
                        var newSpan = document.createElement('span');
                        t.appendChild(newSpan);
                        newSpan.innerHTML = tag;
                        tag = newSpan.firstChild;
                    }
                }

                cursorPosition += 1;
                if (cursorPosition < HTML.length - 1) {
                    setTimeout(type, tempTypeSpeed);
                }
            };

            return {
                type: type
            };
        }

        let typer = document.getElementById('typewriter');

        typewriter = setupTypewriter(typewriter);

        typewriter.type();
    </script>
</div>

--- new ---

<div class="single-title-meme bg_grey">
    <img src="https://i.imgflip.com/6k5n9e.jpg"
         alt="PHP vibes" />
</div>

--- new ---

<div class="single-title-meme bg_grey">
    <img src="https://i.redd.it/gj1y1f3ltmj41.jpg"
         alt="PHP racism" />
    <h1>We're all "Opinionated" about PHP</h1>
</div>

--- new ---

<div class="single-title-meme bg_grey">
    <img src="https://preview.redd.it/oul3gz1bvwwy.jpg?auto=webp&s=2b2a479ad697bb44cca2b50cce664f262b28673f"
         alt="PHP Rulebook" />
</div>

--- new ---

<div class="single-title-meme bg_grey">
    <img src="https://i.imgflip.com/6k5n4r.jpg"
         alt="JSP" />
</div>

--- new ---

<div class="single-title-meme bg_grey">
    <img src="https://pbs.twimg.com/media/FSc3oy1XEAA9jHJ?format=jpg&name=small"
         alt="JS dead" />
    <h1>PyScript is <b>Not</b> a drop-in replacement for JS</h1>
</div>

--- new ---
<div class="single-title bg_grey">
    <h1 class="centred"><em class="pyscript">&lt;py&gt;</em> 💜JS </h1>
</div>

--- new ---
<div class="bg_grey">
    <h1 class="centred"><em class="pyscript">&lt;py&gt;</em> 💜JS </h1>

    <img src="https://pyodide.org/en/stable/_static/pyodide-logo.png" style="max-width: 25%; display: inline-block;" alt="Pyodide Logo" />

    <py-md>
        * Execution of Python over WASM
        * Full PyData Stack already available
        * Direct Access to DOM & DOM manipulation objects
    </py-md>

    <py-md>
        `from pyodide import create_proxy, fetch, open_url`
        <br />
        `from js import document`
        <br />
        `[...]`
    </py-md>
</div>

--- new ---
<div class="single-title bg_grey">
    <h1>So.. What is <em class="pyscript">PyScript</em></h1>
</div>

--- new ---

<div class="bg_grey">
    <h1 class="centred">What is <em class="pyscript">PyScript</em></h1>

    <py-md>
        PyScript is a framework that allows users to create rich Python applications
        in the browser using HTML's interface and the power of **Pyodide**, **WASM**,
        and modern web technologies.
        <br />
        The PyScript framework provides users at every experience level with access to an expressive, easy-to-learn programming language with countless applications.
    </py-md>

    <py-md>
        **Mission**: _Bring programming for the 99%._
    </py-md>
</div>

--- new ---

<div class="bg_grey">
    <h1 class="centred">What is <em class="pyscript">PyScript</em></h1>
    <py-md>
        Python in the browser: Enable drop-in content, external file hosting,
        and application hosting without the reliance on server-side configuration
        <br />
        Python ecosystem: Run many popular packages of Python and the scientific stack (thanks to Pyodide)
        <br />
        Python with JavaScript: Bi-directional communication between Python and Javascript
    </py-md>
</div>

--- new ---

<div class="bg_grey">
    <h1 class="centred">What is <em class="pyscript">PyScript</em></h1>
    <py-md>
        Environment management: Allow users to define what packages and files to include for the page code to run
        <br />
        Visual application development: Use readily available curated UI components, such as buttons, containers, text boxes, and more
    </py-md>
</div>

--- new ---

<div class="single-title bg_grey">
    <h1>Editor and IDE Integrations</h1>
</div>

--- new ---

<div class="single-title-meme bg_purple">
    <img src="imgs/twitter_jetbrains.png" alt="PyScript PyCharm Integration" />
</div>

--- new ---
<div class="single-title" style="background:#e59;">
    <h1>Why?</h1>
</div>

--- new ---

<div class="single-title" style="background:#e59;">
    <h1>Well.... why not?</h1>
</div>

--- new ---

<div class="single-title" style="background:#e59;">
    <h1>PyScript from a Data Science Perspective</h1>
</div>

--- new ---

<div class="single-title" style="background:#e59;">
    <h1>Ubiquitous Virtual Machine</h1>
</div>

--- new ---

<div class="single-title" style="background:#e59;">
    <h1>No Installation nor Environment</h1>
</div>

--- new ---

<div class="single-title" style="background:#e59;">
    <h1>Self-contained Environment!</h1>
</div>

--- new ---

<div class="single-title" style="background:#e59;">
    <h1>You can add a REPL to slides!</h1>
</div>

--- new ---

<div class="bg_purple">
    <h1>Python has a cool mantra, try to import this ;)</h1>
    <py-repl></py-repl>
</div>

--- new ---

<div class="bg_purple">
    <h1>import antigravity</h1>
    <py-repl auto-generate="true"></py-repl>
</div>

--- new ---

<div class="single-title-meme bg_grey">
    <img src="https://c.tenor.com/HjA8WB2tLZoAAAAd/monty-python-holy-hand-grenade.gif"
         alt="Monty Python One Two Five" />
    <h1>The holy-hand grenade</h1>
</div>

--- new ---

<div class="bg_grey">
    <div class="flex mx-8">
    <div class="w-1/2 mx-1">
        <py-repl id="mlib-repl" auto-generate="true" std-out="mlib-output" std-err="mlib-output">

import matplotlib.pyplot as plt
import matplotlib.tri as tri
import numpy as np

# First create the x and y coordinates of the points.
n_angles = 36
n_radii = 8
min_radius = 0.25
radii = np.linspace(min_radius, 0.95, n_radii)

angles = np.linspace(0, 2 * np.pi, n_angles, endpoint=False)
angles = np.repeat(angles[..., np.newaxis], n_radii, axis=1)
angles[:, 1::2] += np.pi / n_angles

x = (radii * np.cos(angles)).flatten()
y = (radii * np.sin(angles)).flatten()
z = (np.cos(radii) * np.cos(3 * angles)).flatten()

# Create the Triangulation; no triangles so Delaunay triangulation created.
triang = tri.Triangulation(x, y)

# Mask off unwanted triangles.
triang.set_mask(np.hypot(x[triang.triangles].mean(axis=1),
                         y[triang.triangles].mean(axis=1)).__lt__(min_radius))

fig1, ax1 = plt.subplots()
ax1.set_aspect('equal')
tpc = ax1.tripcolor(triang, z, shading='flat')
fig1.colorbar(tpc)
ax1.set_title('tripcolor of Delaunay triangulation, flat shading')

fig1
        </py-repl>
        </div>
        <div id="mlib-output" class="w-1/2 mx-1"></div>
        </div>
</div>

--- new ---

<div class="single-title bg_pink">
    <h1>(Data Viz) Demo Time</h1>
    <a href="https://leriomaggio.github.io/pyscript-dataviz/examples/" title="PyScript Demos">Demos</a>
</div>

--- new ---

<div class="single-title bg_purple">
    <h1>Demo of all Demos (this slideshow :) )</h1>
</div>

--- new ---
<div class="bg_green">
    <h1>THANK YOU</h1>
    <p>
        Thanks to Fabio Pliger, Philipp Rudiger, Guillaume Lamaitre, all of you
    </p>
</div>
